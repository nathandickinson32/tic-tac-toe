["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$speclj.stub","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$check-recording",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","~:line",5,"~:column",8,"~:end-line",5,"~:end-column",23,"~:private",true,"~:arglists",["~#list",["~$quote",["^F",[[]]]]]],"^D",true,"^5","~$speclj.stub/check-recording","^?","resources/public/cljs/speclj/stub.cljc","^C",23,"~:method-params",["^F",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^F",[null,null]],"^A",1,"~:variadic?",false,"^@",5,"~:ret-tag","~$clj-nil","^B",5,"~:max-fixed-arity",0,"~:fn-var",true,"^E",["^F",["^G",["^F",[[]]]]]],"~$*stubbed-invocations*",["^ ","^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",3,"^A",20,"^B",3,"^C",41,"~:dynamic",true,"~:declared",true],"^5","~$speclj.stub/*stubbed-invocations*","^?","resources/public/cljs/speclj/stub.cljc","^C",41,"^A",1,"^R",true,"^@",3,"^S",true,"^B",3,"~:tag","~$any"],"~$invocations-of",["^ ","^=",null,"^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",46,"^A",7,"^B",46,"^C",21,"^E",["^F",["^G",["^F",[["~$name"]]]]],"~:doc","Returns a list of argument lists representing each invocation of the specified stub."],"^5","~$speclj.stub/invocations-of","^?","resources/public/cljs/speclj/stub.cljc","^C",21,"^I",["^F",[["^X"]]],"^J",null,"^K",["^F",[null,null]],"^A",1,"^L",false,"^@",46,"^M","~$cljs.core/LazySeq","^B",46,"^O",1,"^P",true,"^E",["^F",["^G",["^F",[["^X"]]]]],"^Y","Returns a list of argument lists representing each invocation of the specified stub."],"~$params-match?",["^ ","^=",null,"^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",63,"^A",7,"^B",63,"^C",20,"^E",["^F",["^G",["^F",[["~$expected","~$actual"]]]]]],"^5","~$speclj.stub/params-match?","^?","resources/public/cljs/speclj/stub.cljc","^C",20,"^I",["^F",[["^11","^12"]]],"^J",null,"^K",["^F",[null,null]],"^A",1,"^L",false,"^@",63,"^M","~$boolean","^B",63,"^O",2,"^P",true,"^E",["^F",["^G",["^F",[["^11","^12"]]]]]],"~$arity-mismatch-message",["^ ","^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",22,"^A",16,"^B",22,"^C",38,"^D",true],"^D",true,"^5","~$speclj.stub/arity-mismatch-message","^?","resources/public/cljs/speclj/stub.cljc","^C",38,"^A",1,"^@",22,"^B",22,"^U","~$string"],"~$clear!",["^ ","^=",null,"^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",11,"^A",7,"^B",11,"^C",13,"^E",["^F",["^G",["^F",[[]]]]],"^Y","Removes all previous stub invocations to continue with a blank slate."],"^5","~$speclj.stub/clear!","^?","resources/public/cljs/speclj/stub.cljc","^C",13,"^I",["^F",[[]]],"^J",null,"^K",["^F",[null,null]],"^A",1,"^L",false,"^@",11,"^M",["^4",[null,"^V"]],"^B",11,"^O",0,"^P",true,"^E",["^F",["^G",["^F",[[]]]]],"^Y","Removes all previous stub invocations to continue with a blank slate."],"~$stub",["^ ","^=",null,"^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",31,"^A",7,"^B",31,"^C",11,"^E",["^F",["^G",["^F",[["^X"],["^X","~$options"]]]]],"~:top-fn",["^ ","^L",false,"~:fixed-arity",2,"^O",2,"^I",[["^X"],["^X","^1;"]],"^E",["^F",[["^X"],["^X","^1;"]]],"^K",["^F",[null,null]]]],"^5","~$speclj.stub/stub","^?","resources/public/cljs/speclj/stub.cljc","^C",11,"^1<",["^ ","^L",false,"^1=",2,"^O",2,"^I",[["^X"],["^X","^1;"]],"^E",["^F",[["^X"],["^X","^1;"]]],"^K",["^F",[null,null]]],"^I",[["^X"],["^X","^1;"]],"^J",null,"^1=",2,"^K",["^F",[null,null]],"^A",1,"^L",false,"~:methods",[["^ ","^1=",1,"^L",false,"^U","^V"],["^ ","^1=",2,"^L",false,"^U","~$function"]],"^@",31,"^B",31,"^O",2,"^P",true,"^E",["^F",[["^X"],["^X","^1;"]]]],"~$first-invocation-of",["^ ","^=",null,"^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",53,"^A",7,"^B",53,"^C",26,"^E",["^F",["^G",["^F",[["^X"]]]]],"^Y","Returns the list of arguments passed into the first invocation of the specified stub, nil if it was never invoked."],"^5","~$speclj.stub/first-invocation-of","^?","resources/public/cljs/speclj/stub.cljc","^C",26,"^I",["^F",[["^X"]]],"^J",null,"^K",["^F",[null,null]],"^A",1,"^L",false,"^@",53,"^M",["^4",["^V","^N"]],"^B",53,"^O",1,"^P",true,"^E",["^F",["^G",["^F",[["^X"]]]]],"^Y","Returns the list of arguments passed into the first invocation of the specified stub, nil if it was never invoked."],"~$invoke-delegate",["^ ","^=",null,"^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",23,"^A",8,"^B",23,"^C",23,"^D",true,"^E",["^F",["^G",["^F",[["^X","~$delegate","~$args"]]]]]],"^D",true,"^5","~$speclj.stub/invoke-delegate","^?","resources/public/cljs/speclj/stub.cljc","^C",23,"^I",["^F",[["^X","^1D","^1E"]]],"^J",null,"^K",["^F",[null,null]],"^A",1,"^L",false,"^@",23,"^B",23,"^O",3,"^P",true,"^E",["^F",["^G",["^F",[["^X","^1D","^1E"]]]]]],"~$last-invocation-of",["^ ","^=",null,"^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",58,"^A",7,"^B",58,"^C",25,"^E",["^F",["^G",["^F",[["^X"]]]]],"^Y","Returns the list of arguments passed into the last invocation of the specified stub, nil if it was never invoked."],"^5","~$speclj.stub/last-invocation-of","^?","resources/public/cljs/speclj/stub.cljc","^C",25,"^I",["^F",[["^X"]]],"^J",null,"^K",["^F",[null,null]],"^A",1,"^L",false,"^@",58,"^M",["^4",["^V","^N"]],"^B",58,"^O",1,"^P",true,"^E",["^F",["^G",["^F",[["^X"]]]]],"^Y","Returns the list of arguments passed into the last invocation of the specified stub, nil if it was never invoked."],"~$-record-invocation",["^ ","^=",null,"^>",["^ ","^?","/Users/nathandickinson/Projects/tic-tac-toe/resources/public/cljs/speclj/stub.cljc","^@",17,"^A",7,"^B",17,"^C",25,"^E",["^F",["^G",["^F",[["^X","^1E"]]]]]],"^5","~$speclj.stub/-record-invocation","^?","resources/public/cljs/speclj/stub.cljc","^C",25,"^I",["^F",[["^X","^1E"]]],"^J",null,"^K",["^F",[null,null]],"^A",1,"^L",false,"^@",17,"^M",["^4",[null,"^V"]],"^B",17,"^O",2,"^P",true,"^E",["^F",["^G",["^F",[["^X","^1E"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:*","~:else","~:return","~:invoke","~:throw"]],"~:order",["^1Q","^1R","^1P","~:*","^1O"]],"^Y",null,"~:as-aliases",["^ "]]